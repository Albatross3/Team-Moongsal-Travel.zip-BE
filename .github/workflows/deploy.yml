name: Build and Deploy to EC2

on:
  push:
    branches: [ feature/#15 ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle build
        run: ./gradlew clean build

      - name: Show structure of artifact files
        run: ls -ahl ./build/libs/*.jar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"
          strip_components: 2

      - name: Transfer Deploy Script use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          source: "deploy.sh"
          target: "/home/ubuntu"

      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          script_stop: true
          script: chmod +x /home/ubuntu/deploy.sh && sh /home/ubuntu/deploy.sh

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32