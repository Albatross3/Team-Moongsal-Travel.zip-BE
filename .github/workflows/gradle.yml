name: Build and Deploy to EC2

on:
  push:
    branches:
      - feature/#17

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_RDS_URL: ${{ secrets.AWS_RDS_URL }}
      AWS_MASTER_USER_NAME: ${{ secrets.AWS_MASTER_USER_NAME }}
      AWS_MASTER_USER_PASSWORD: ${{ secrets.AWS_MASTER_USER_PASSWORD }}
      NAVER_ID: ${{ secrets.NAVER_ID }}
      NAVER_PASSWORD: ${{ secrets.NAVER_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
        env:
          AWS_RDS_URL: ${{ secrets.AWS_RDS_URL }}
          AWS_MASTER_USER_NAME: ${{ secrets.AWS_MASTER_USER_NAME }}
          AWS_MASTER_USER_PASSWORD: ${{ secrets.AWS_MASTER_USER_PASSWORD }}
          NAVER_ID: ${{ secrets.NAVER_ID }}
          NAVER_PASSWORD: ${{ secrets.NAVER_PASSWORD }}

      #      - name: Gradle build
      #        env:
      #          AWS_RDS_URL: ${{ secrets.AWS_RDS_URL }}
      #          AWS_MASTER_USER_NAME: ${{ secrets.AWS_MASTER_USER_NAME }}
      #          AWS_MASTER_USER_PASSWORD: ${{ secrets.AWS_MASTER_USER_PASSWORD }}
      #          NAVER_ID: ${{ secrets.NAVER_ID }}
      #          NAVER_PASSWORD: ${{ secrets.NAVER_PASSWORD }}
      #
      #        run: ./gradlew clean build

      - name: Show structure of artifact files
        run: ls -ahl ./build/libs/*.jar

      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"
          strip_components: 2

      - name: Transfer Deploy Script use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          source: "deploy.sh"
          target: "/home/ubuntu"

      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.AWS_USERNAME }}
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          script_stop: true
          script: chmod +x /home/ubuntu/deploy.sh && sh /home/ubuntu/deploy.sh